<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
    <link href="~/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="~/js/bootstrap.min.js"></script>
    <script src="~/jquery-1.11.1.min.js"></script>

    <style>
        .alert-message {
            margin: 20px 0;
            padding: 20px;
            border-left: 3px solid #eee;
            width: 600px;
            margin-top: 80px;
            font-family: "Roboto", sans-serif;
        }

        .alert-message h4 {
            margin-top: 0;
            margin-bottom: 5px;
        }

        .alert-message p:last-child {
            margin-bottom: 0;
        }

        .alert-message code {
            background-color: #fff;
            border-radius: 3px;
        }

        .alert-message-success {
            background-color: #F4FDF0;
            border-color: #766dff;
        }

        .alert-message-success h4 {
            color: #766dff;
        }

        .alert-message-danger {
            background-color: #fdf7f7;
            border-color: #d9534f;
        }

        .alert-message-danger h4 {
            color: #d9534f;
        }

        .alert-message-warning {
            background-color: #fcf8f2;
            border-color: #f0ad4e;
        }

        .alert-message-warning h4 {
            color: #f0ad4e;
        }

        .alert-message-info {
            background-color: #f4f8fa;
            border-color: #5bc0de;
        }

        .alert-message-info h4 {
            color: #5bc0de;
        }

        .alert-message-default {
            background-color: #EEE;
            border-color: #B4B4B4;
        }

        .alert-message-default h4 {
            color: #000;
        }

        .alert-message-notice {
            background-color: #FCFCDD;
            border-color: #BDBD89;
        }

        .alert-message-notice h4 {
            color: #444;
        }

        .navbar-default {
            border-color: transparent;
            background-color: #222;
        }

        .navbar-default .navbar-brand {
            font-family: "Kaushan Script", "Helvetica Neue", Helvetica, Arial, cursive;
        }

        .navbar-default .navbar-collapse {
            border-color: rgba(255, 255, 255, .02);
        }

        .navbar-default .navbar-toggle .icon-bar {
            background-color: #fff;
        }


        .navbar-default .nav li a {
            text-transform: uppercase;
            font-family: Montserrat, "Helvetica Neue", Helvetica, Arial, sans-serif;
            font-weight: 400;
            letter-spacing: 1px;
            color: #fff;
            font-size: 12px;
        }


        .navbar-default .navbar-nav>.active>a {
            border-radius: 0;
            color: #fff;
        }

        .navbar-default .navbar-nav>.active>a:hover,
        .navbar-default .navbar-nav>.active>a:focus {
            color: #fff;
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header page-scroll">
                <button type="button" class="navbar-toggle" data-toggle="collapse"
                    data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand page-scroll" href="#page-top">Wanna Bet?</a>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav navbar-right">
                    <li class="hidden">
                        <a href="#page-top"></a>
                    </li>
                    <li>
                        <a class="page-scroll" href="#feature">Features</a>
                    </li>
                    <li>
                        <a class="page-scroll" href="#portfolio">Login</a>
                    </li>
                    <li>
                        <a class="page-scroll" href="#about-us">Register</a>
                    </li>
                    <li>
                        <a class="page-scroll" href="#contact">Contact</a>
                    </li>
                </ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>
        <!-- /.container-fluid -->
    </nav>
    <div class="container">
        <div class="row">
            <div class="col-sm-6 col-md-6">
                <div class="alert-message alert-message-success">
                    <h1>List of my sent messages</h1>
                        <table id="myTable">
                            <tr>
                                <th onclick="sortTable(0)">To</th>
                                <th onclick="sortTable(1)"> Date</th>
                                <th onclick="sortTable(2)">Message</th>
                                <th onclick="sortTable(3)">Action</th>
                            </tr>
                            @foreach(var rec in ViewBag.listOfMySentMessages)
                            {
                            <tr>
                                <td>@rec.Receiver.FirstName</td>
                                <td>@rec.CreatedAt</td>
                                <td>@rec.Info</td>
                                <td><a href="/deleteusermessage/@rec.UserMessageId">Delete Message</a></td>
                            </tr>
                            }
                        </table>
                </div>
                <div class="col-sm-6 col-md-6">
                    <div class="alert-message alert-message-danger">
                        <h1>List of my received messages</h1>
                        <table id="myReceivedMessages">
                            <tr>
                                <th onclick="sortTable(0)">From</th>
                                <th onclick="sortTable(1)">Date</th>
                                <th onclick="sortTable(2)">Message</th>
                                <th onclick="sortTable(3)">Action</th>
                            </tr>
                            @foreach(var rec in ViewBag.listOfMyReceivedMessages)
                            {
                            <tr>
                                <td>@rec.Sender.FirstName</td>
                                <td>@rec.CreatedAt</td>
                                <td>@rec.Info</td>
                                <td><a href="/deleteusermessage/@rec.UserMessageId">Delete Message</a></td>
                            </tr>
                            }
                        </table>
                            

                    </div>
                </div>
            </div>
        </div>
    </div>
<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("myTable");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("myReceivedMessages");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>

</body>

</html>